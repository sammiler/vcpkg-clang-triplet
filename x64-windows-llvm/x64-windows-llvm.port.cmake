if(NOT PORT MATCHES "(boost|hwloc|libpq|icu|harfbuzz|^qt[a-z]+|benchmark|gtest|pkgconf|jkqtplotter)")
    set(VCPKG_CHAINLOAD_TOOLCHAIN_FILE "${CMAKE_CURRENT_LIST_DIR}/x64-windows-llvm.toolchain.cmake")
    if(DEFINED VCPKG_PLATFORM_TOOLSET)
        set(VCPKG_PLATFORM_TOOLSET ClangCL)
    endif()
    if(EXISTS "${POSSIBLE_LLVM_BIN_DIR}")
        set(ENV{PATH} "${POSSIBLE_LLVM_BIN_DIR};$ENV{PATH}")
    endif()
elseif(PORT MATCHES "jkqtplotter")
    if(EXISTS "${POSSIBLE_LLVM_BIN_DIR}")
        set(ENV{PATH} "$ENV{PATH};${POSSIBLE_LLVM_BIN_DIR}")
    endif()
    set(VCPKG_QT_TARGET_MKSPEC win32-msvc)
    set(VCPKG_CHAINLOAD_TOOLCHAIN_FILE "${CMAKE_CURRENT_LIST_DIR}/x64-windows-llvm.toolchain.cl.cmake")
elseif(PORT MATCHES "(benchmark|gtest|pkgconf|^qt[a-z]+)")
    # Cannot have LTO enabled in gtest or benchmark since this eliminates/remove main from (gtest|benchmark)_main
    set(VCPKG_CHAINLOAD_TOOLCHAIN_FILE "${CMAKE_CURRENT_LIST_DIR}/x64-windows-llvm.toolchain-no-lto.cmake")
    if(DEFINED VCPKG_PLATFORM_TOOLSET)
        set(VCPKG_PLATFORM_TOOLSET ClangCL)
    endif()
    if(EXISTS "${POSSIBLE_LLVM_BIN_DIR}")
        set(ENV{PATH} "${POSSIBLE_LLVM_BIN_DIR};$ENV{PATH}")
    endif()
else()
    set(VCPKG_QT_TARGET_MKSPEC win32-msvc)
    # Normal cl case.
endif()
